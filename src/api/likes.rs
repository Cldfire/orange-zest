// Generated by https://app.quicktype.io/ with a few hand edits
//
// Turn on derive debug impl and make all properties optional

// TODO: a lot of stuff that could use enums to strongly type certain properties
// can't right now because serde doesn't support deserializing to an enum with
// a non-unit variant fallback to capture the value as a string if it doesn't
// match one of the existing unit variants
//
// see https://github.com/serde-rs/serde/pull/1382#issuecomment-424706998

use serde_derive::{Serialize, Deserialize};
use super::common::*;

#[derive(Debug, Serialize, Deserialize)]
pub struct LikesRaw {
    pub collection: Option<Vec<LikesCollection>>,
    pub next_href: Option<String>,
}

#[derive(Debug, Serialize, Deserialize)]
pub struct LikesCollection {
    pub created_at: Option<String>,
    // Made this non-optional since it will always be present here
    pub track: Track,
}
